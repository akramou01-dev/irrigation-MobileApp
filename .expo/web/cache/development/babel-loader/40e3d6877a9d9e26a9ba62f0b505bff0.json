{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\bpx_tech\\\\GreanIt app\\\\my-app\\\\Screens\\\\signup.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useReducer, useContext } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport PersoButton from \"../Components/persoButton\";\nimport Colors from \"../Constants/Colors\";\nimport { Entypo } from \"@expo/vector-icons\";\nimport { AntDesign } from \"@expo/vector-icons\";\nimport { AuthContext } from \"../Components/context\";\nvar FORM_INPUT_UPDATE = \"FORM_INPUT_UPDATE\";\n\nvar formReducer = function formReducer(state, action) {\n  if (action.type === FORM_INPUT_UPDATE) {\n    var updatedValues = _objectSpread(_objectSpread({}, state.inputValues), {}, _defineProperty({}, action.input, action.value));\n\n    var updatedValidities = _objectSpread(_objectSpread({}, state.inputValidities), {}, _defineProperty({}, action.input, action.isValid));\n\n    var updatedTouches = _objectSpread(_objectSpread({}, state.inputValidities), {}, _defineProperty({}, action.input, action.isTouched));\n\n    var updatedFormIsValid = true;\n\n    for (var key in updatedValidities) {\n      updatedFormIsValid = updatedFormIsValid && updatedValidities[key];\n    }\n\n    return {\n      formIsValid: updatedFormIsValid,\n      inputValidities: updatedValidities,\n      inputTuched: updatedTouches,\n      inputValues: updatedValues\n    };\n  }\n\n  return state;\n};\n\nvar Signup = function Signup(props) {\n  var Signup = useContext(AuthContext);\n\n  var _useReducer = useReducer(formReducer, {\n    inputValues: {\n      email: \"\",\n      password: \"\",\n      confirmPassword: \"\"\n    },\n    inputValidities: {\n      email: false,\n      password: false,\n      confirmPassword: false\n    },\n    inputTuched: {\n      email: false,\n      password: false,\n      confirmPassword: false\n    },\n    formIsValid: false\n  }),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      formState = _useReducer2[0],\n      dispatchFormState = _useReducer2[1];\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      editable = _React$useState2[0],\n      setEditable = _React$useState2[1];\n\n  var emailRegex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n  var textChangeHandler = function textChangeHandler(inputIdentifier, text) {\n    var isValid = false;\n\n    if (inputIdentifier == \"email\" && emailRegex.test(text.toLowerCase())) {\n      isValid = true;\n    } else if (inputIdentifier == \"password\" && text.trim().length > 0 && text.length > 6) {\n      isValid = true;\n      setEditable(true);\n    } else if (inputIdentifier == \"confirmPassword\" && text.trim().length > 0 && text === formState.inputValues.password) {\n      isValid = true;\n    }\n\n    dispatchFormState({\n      type: FORM_INPUT_UPDATE,\n      value: text,\n      isValid: isValid,\n      isTouched: true,\n      input: inputIdentifier\n    });\n  };\n\n  var loginHandler = function loginHandler() {\n    if (formState.formIsValid) {\n      Signup();\n    } else {\n      Alert.alert(\"Invalid E-mail or password\", \"Please inter a valid E-mail or Password\", [{\n        text: 'ok',\n        style: \"cancel\"\n      }]);\n    }\n\n    ;\n  };\n\n  return React.createElement(ScrollView, null, React.createElement(KeyboardAvoidingView, {\n    behavior: \"position\",\n    keyboardVerticalOffset: 0\n  }, React.createElement(View, {\n    style: styles.container\n  }, React.createElement(View, {\n    style: styles.imgContainer\n  }, React.createElement(Image, {\n    source: require(\"../assets/logo.png\"),\n    style: styles.img\n  })), React.createElement(View, {\n    style: styles.inputs\n  }, React.createElement(Text, {\n    style: styles.text\n  }, \"Login to your account.\"), React.createElement(TextInput, {\n    style: styles.input,\n    keyboardType: \"email-address\",\n    placeholder: \"E-mail or phone number\",\n    onChangeText: textChangeHandler.bind(_this, \"email\")\n  }), !formState.inputValidities.email && formState.inputValues.email.length != 0 && formState.inputTuched.email && React.createElement(Text, {\n    style: styles.alertText\n  }, \"Please enter a valid E-mail!\"), React.createElement(TextInput, {\n    style: styles.input,\n    secureTextEntry: true,\n    textContentType: \"password\",\n    placeholder: \"Password\",\n    onChangeText: textChangeHandler.bind(_this, \"password\")\n  }), !formState.inputValidities.password && formState.inputValues.password.length != 0 && formState.inputTuched.password && React.createElement(Text, {\n    style: styles.alertText\n  }, \"Please enter a password longer than 6 characters\"), React.createElement(TextInput, {\n    style: styles.input,\n    secureTextEntry: true,\n    editable: editable,\n    textContentType: \"password\",\n    placeholder: \"Confirm password\",\n    onChangeText: textChangeHandler.bind(_this, \"confirmPassword\")\n  }), !formState.inputValidities.confirmPassword && formState.inputValues.confirmPassword.length != 0 && formState.inputTuched.confirmPassword && React.createElement(Text, {\n    style: styles.alertText\n  }, \"Please enter the same password\"), React.createElement(View, {\n    style: styles.buttonContainer\n  }, React.createElement(PersoButton, {\n    style: {\n      paddingVertical: 18\n    },\n    onPress: loginHandler\n  }, \"Sign in\"))), React.createElement(View, {\n    style: styles.media\n  }, React.createElement(Text, {\n    style: {\n      fontFamily: \"futura-meduim\",\n      fontSize: 19\n    }\n  }, \"Or sign in with\"), React.createElement(View, {\n    style: styles.mediaIcons\n  }, React.createElement(Entypo, {\n    name: \"facebook\",\n    size: 50,\n    color: \"#3b5998\"\n  }), React.createElement(AntDesign, {\n    name: \"instagram\",\n    size: 50,\n    color: \"#F56040\"\n  }), React.createElement(Entypo, {\n    name: \"twitter\",\n    size: 50,\n    color: \"#1DA1F2\"\n  }))))));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"flex-start\"\n  },\n  imgContainer: {\n    marginTop: 30\n  },\n  buttonContainer: {\n    width: \"100%\",\n    marginTop: 20\n  },\n  media: {\n    marginTop: 40,\n    alignItems: \"center\",\n    width: Dimensions.get(\"window\").width * 0.6\n  },\n  mediaIcons: {\n    marginTop: 20,\n    width: \"100%\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\"\n  },\n  img: {\n    width: Dimensions.get(\"window\").width * 0.5,\n    height: Dimensions.get(\"window\").width * 0.5\n  },\n  inputs: {\n    width: Dimensions.get(\"window\").width * 0.8,\n    alignItems: \"flex-start\"\n  },\n  text: {\n    fontSize: 22,\n    fontFamily: \"futura-meduim\"\n  },\n  input: {\n    width: \"100%\",\n    borderWidth: 2,\n    borderRadius: 2,\n    borderColor: Colors.grey_fade,\n    paddingVertical: 15,\n    paddingHorizontal: 30,\n    marginTop: 20\n  },\n  alertText: {\n    color: Colors.danger,\n    fontFamily: \"futura-meduim\"\n  }\n});\nexport default Signup;","map":{"version":3,"sources":["C:/Users/hp/Desktop/bpx_tech/GreanIt app/my-app/Screens/signup.js"],"names":["React","useReducer","useContext","PersoButton","Colors","Entypo","AntDesign","AuthContext","FORM_INPUT_UPDATE","formReducer","state","action","type","updatedValues","inputValues","input","value","updatedValidities","inputValidities","isValid","updatedTouches","isTouched","updatedFormIsValid","key","formIsValid","inputTuched","Signup","props","email","password","confirmPassword","formState","dispatchFormState","useState","editable","setEditable","emailRegex","textChangeHandler","inputIdentifier","text","test","toLowerCase","trim","length","loginHandler","Alert","alert","style","styles","container","imgContainer","require","img","inputs","bind","alertText","buttonContainer","paddingVertical","media","fontFamily","fontSize","mediaIcons","StyleSheet","create","flex","alignItems","justifyContent","marginTop","width","Dimensions","get","flexDirection","height","borderWidth","borderRadius","borderColor","grey_fade","paddingHorizontal","color","danger"],"mappings":"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","sourcesContent":["import React, { useReducer, useContext } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  Image,\r\n  Dimensions,\r\n  TextInput,\r\n    Alert,\r\n  ScrollView,\r\n  KeyboardAvoidingView,\r\n} from \"react-native\";\r\nimport PersoButton from \"../Components/persoButton\";\r\nimport Colors from \"../Constants/Colors\";\r\nimport { Entypo } from \"@expo/vector-icons\";\r\nimport { AntDesign } from \"@expo/vector-icons\";\r\nimport { AuthContext } from \"../Components/context\"\r\n\r\nconst FORM_INPUT_UPDATE = \"FORM_INPUT_UPDATE\";\r\n\r\nconst formReducer = (state, action) => {\r\n  if (action.type === FORM_INPUT_UPDATE) {\r\n    const updatedValues = {\r\n      ...state.inputValues,\r\n      [action.input]: action.value,\r\n    };\r\n    const updatedValidities = {\r\n      ...state.inputValidities,\r\n      [action.input]: action.isValid,\r\n    };\r\n    const updatedTouches = {\r\n      ...state.inputValidities,\r\n      [action.input]: action.isTouched,\r\n    };\r\n    let updatedFormIsValid = true;\r\n    for (const key in updatedValidities) {\r\n      updatedFormIsValid = updatedFormIsValid && updatedValidities[key];\r\n    }\r\n    return {\r\n      formIsValid: updatedFormIsValid,\r\n      inputValidities: updatedValidities,\r\n      inputTuched: updatedTouches,\r\n      inputValues: updatedValues,\r\n    };\r\n  }\r\n  return state;\r\n};\r\n\r\nconst Signup = (props) => {\r\n    const Signup = useContext(AuthContext);\r\n  const [formState, dispatchFormState] = useReducer(formReducer, {\r\n    inputValues: {\r\n      email: \"\",\r\n      password: \"\",\r\n      confirmPassword   : \"\",\r\n    },\r\n    inputValidities: {\r\n      email: false,\r\n      password: false,\r\n      confirmPassword: false,\r\n    },\r\n    inputTuched: {\r\n      email: false,\r\n      password: false,\r\n      confirmPassword: false,\r\n    },\r\n    formIsValid: false,\r\n  });\r\n  const [editable, setEditable] = React.useState(false)\r\n\r\n  const emailRegex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n  const textChangeHandler = (inputIdentifier, text) => {\r\n    let isValid = false;\r\n    if (inputIdentifier == \"email\" && emailRegex.test(text.toLowerCase())) {\r\n      isValid = true;\r\n    } else if (\r\n      inputIdentifier == \"password\" &&\r\n      text.trim().length > 0 &&\r\n      text.length > 6\r\n    ) {\r\n      isValid = true;\r\n      setEditable(true)\r\n    } else if (\r\n      inputIdentifier == \"confirmPassword\" &&\r\n      text.trim().length > 0 &&\r\n      text === formState.inputValues.password\r\n    ) {\r\n      isValid = true;\r\n    }\r\n    dispatchFormState({\r\n      type: FORM_INPUT_UPDATE,\r\n      value: text,\r\n      isValid: isValid,\r\n      isTouched: true,\r\n      input: inputIdentifier,\r\n    });\r\n  };\r\n\r\n  const loginHandler = () =>{\r\n      if (formState.formIsValid){\r\n          Signup()\r\n      } else {\r\n        Alert.alert(\"Invalid E-mail or password\",\"Please inter a valid E-mail or Password\",[{text:'ok',style:\"cancel\"}])\r\n      };\r\n  };\r\n\r\n  return (\r\n    <ScrollView>\r\n      <KeyboardAvoidingView behavior=\"position\" keyboardVerticalOffset={0}>\r\n        <View style={styles.container}>\r\n          <View style={styles.imgContainer}>\r\n            <Image source={require(\"../assets/logo.png\")} style={styles.img} />\r\n          </View>\r\n          <View style={styles.inputs}>\r\n            <Text style={styles.text}>Login to your account.</Text>\r\n            <TextInput\r\n              style={styles.input}\r\n              keyboardType=\"email-address\"\r\n              placeholder=\"E-mail or phone number\"\r\n              onChangeText={textChangeHandler.bind(this, \"email\")}\r\n            />\r\n            {!formState.inputValidities.email &&\r\n            formState.inputValues.email.length != 0 &&\r\n            formState.inputTuched.email && (\r\n              <Text style={styles.alertText}>Please enter a valid E-mail!</Text>\r\n            )}\r\n            <TextInput\r\n              style={styles.input}\r\n              secureTextEntry\r\n              textContentType=\"password\"\r\n              placeholder=\"Password\"\r\n              onChangeText={textChangeHandler.bind(this, \"password\")}\r\n            />\r\n            {!formState.inputValidities.password &&\r\n            formState.inputValues.password.length != 0 &&\r\n            formState.inputTuched.password && (\r\n              <Text style={styles.alertText}>\r\n                Please enter a password longer than 6 characters\r\n              </Text>\r\n            )}\r\n            <TextInput\r\n              style={styles.input}\r\n              secureTextEntry\r\n              editable={editable}\r\n              textContentType=\"password\"\r\n              placeholder=\"Confirm password\"\r\n              onChangeText={textChangeHandler.bind(this, \"confirmPassword\")}\r\n            />\r\n            {!formState.inputValidities.confirmPassword &&\r\n            formState.inputValues.confirmPassword.length != 0 &&\r\n            formState.inputTuched.confirmPassword && (\r\n              <Text style={styles.alertText}>\r\n                Please enter the same password\r\n              </Text>\r\n            )}\r\n            <View style={styles.buttonContainer}>\r\n              <PersoButton style={{ paddingVertical: 18 }} onPress={loginHandler} >Sign in</PersoButton>\r\n            </View>\r\n          </View>\r\n          <View style={styles.media}>\r\n            <Text style={{ fontFamily: \"futura-meduim\", fontSize: 19 }}>\r\n              Or sign in with\r\n            </Text>\r\n            <View style={styles.mediaIcons}>\r\n              <Entypo name=\"facebook\" size={50} color=\"#3b5998\" />\r\n              <AntDesign name=\"instagram\" size={50} color=\"#F56040\" />\r\n              <Entypo name=\"twitter\" size={50} color=\"#1DA1F2\" />\r\n            </View>\r\n          </View>\r\n        </View>\r\n      </KeyboardAvoidingView>\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-start\",\r\n  },\r\n  imgContainer: {\r\n    marginTop: 30,\r\n  },\r\n  buttonContainer: {\r\n    width: \"100%\",\r\n    marginTop: 20,\r\n  },\r\n  media: {\r\n    marginTop: 40,\r\n    alignItems: \"center\",\r\n    width: Dimensions.get(\"window\").width * 0.6,\r\n  },\r\n  mediaIcons: {\r\n    marginTop: 20,\r\n    width: \"100%\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  img: {\r\n    width: Dimensions.get(\"window\").width * 0.5,\r\n    height: Dimensions.get(\"window\").width * 0.5,\r\n  },\r\n  inputs: {\r\n    width: Dimensions.get(\"window\").width * 0.8,\r\n    alignItems: \"flex-start\",\r\n  },\r\n  text: {\r\n    fontSize: 22,\r\n    fontFamily: \"futura-meduim\",\r\n  },\r\n  input: {\r\n    width: \"100%\",\r\n    borderWidth: 2,\r\n    borderRadius: 2,\r\n    borderColor: Colors.grey_fade,\r\n    paddingVertical: 15,\r\n    paddingHorizontal: 30,\r\n    marginTop: 20,\r\n  },\r\n  alertText: {\r\n    color: Colors.danger,\r\n    fontFamily: \"futura-meduim\",\r\n  },\r\n});\r\n\r\nexport default Signup;\r\n"]},"metadata":{},"sourceType":"module"}