{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\bpx_tech\\\\GreanIt app\\\\my-app\\\\Screens\\\\login.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useReducer, useContext, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport PersoButton from \"../Components/persoButton\";\nimport Colors from \"../Constants/Colors\";\nimport { Entypo } from \"@expo/vector-icons\";\nimport { AntDesign } from \"@expo/vector-icons\";\nimport { AuthContext } from \"../Components/context\";\nimport Axios from \"axios\";\nvar FORM_INPUT_UPDATE = \"FORM_INPUT_UPDATE\";\n\nvar formReducer = function formReducer(state, action) {\n  if (action.type === FORM_INPUT_UPDATE) {\n    var updatedValues = _objectSpread(_objectSpread({}, state.inputValues), {}, _defineProperty({}, action.input, action.value));\n\n    var updatedValidities = _objectSpread(_objectSpread({}, state.inputValidities), {}, _defineProperty({}, action.input, action.isValid));\n\n    var updatedTouches = _objectSpread(_objectSpread({}, state.inputValidities), {}, _defineProperty({}, action.input, action.isTouched));\n\n    var updatedFormIsValid = true;\n\n    for (var key in updatedValidities) {\n      updatedFormIsValid = updatedFormIsValid && updatedValidities[key];\n    }\n\n    return {\n      formIsValid: updatedFormIsValid,\n      inputValidities: updatedValidities,\n      inputTuched: updatedTouches,\n      inputValues: updatedValues\n    };\n  }\n\n  return state;\n};\n\nvar Login = function Login(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoading = _useState2[0],\n      setIsLoading = _useState2[1];\n\n  var _useContext = useContext(AuthContext),\n      SignIn = _useContext.SignIn;\n\n  var _useReducer = useReducer(formReducer, {\n    inputValues: {\n      email: \"\",\n      password: \"\"\n    },\n    inputValidities: {\n      email: false,\n      password: false\n    },\n    inputTuched: {\n      email: false,\n      password: false\n    },\n    formIsValid: false\n  }),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      formState = _useReducer2[0],\n      dispatchFormState = _useReducer2[1];\n\n  var emailRegex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n  var textChangeHandler = function textChangeHandler(inputIdentifier, text) {\n    var isValid = false;\n\n    if (inputIdentifier == \"email\" && emailRegex.test(text.toLowerCase())) {\n      isValid = true;\n    } else if (inputIdentifier == \"password\" && text.trim().length > 0 && text.length > 6) {\n      isValid = true;\n    }\n\n    dispatchFormState({\n      type: FORM_INPUT_UPDATE,\n      value: text,\n      isValid: isValid,\n      isTouched: true,\n      input: inputIdentifier\n    });\n  };\n\n  var loginHandler = function loginHandler() {\n    var response, resData;\n    return _regeneratorRuntime.async(function loginHandler$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!formState.formIsValid) {\n              _context.next = 16;\n              break;\n            }\n\n            setIsLoading(true);\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(fetch(\"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyBHnNeM0JF6uNUBLSc3pSV4J80LL7kVQB8\", {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify({\n                email: formState.inputValues.email,\n                password: formState.inputValues.password,\n                returnSecureToken: true\n              })\n            }));\n\n          case 4:\n            response = _context.sent;\n            setIsLoading(false);\n\n            if (response.ok) {\n              _context.next = 10;\n              break;\n            }\n\n            Alert.alert(\"prblm\", \"prblm de cnx\");\n            _context.next = 14;\n            break;\n\n          case 10:\n            _context.next = 12;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 12:\n            resData = _context.sent;\n            SignIn(resData.idToken);\n\n          case 14:\n            _context.next = 17;\n            break;\n\n          case 16:\n            Alert.alert(\"Invalid E-mail or password\", \"Please inter a valid E-mail or Password\", [{\n              text: \"ok\",\n              style: \"cancel\"\n            }]);\n\n          case 17:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  if (isLoading) {\n    return React.createElement(View, {\n      style: {\n        flex: 1,\n        alignItems: \"center\",\n        justifyContent: \"center\"\n      }\n    }, React.createElement(ActivityIndicator, {\n      size: \"large\",\n      color: Colors.Green_logo\n    }));\n  }\n\n  return React.createElement(ScrollView, null, React.createElement(View, {\n    style: styles.container\n  }, React.createElement(View, {\n    style: styles.imgContainer\n  }, React.createElement(Image, {\n    source: require(\"../assets/logo.png\"),\n    style: styles.img\n  })), React.createElement(View, {\n    style: styles.inputs\n  }, React.createElement(Text, {\n    style: styles.text\n  }, \"Login to your account.\"), React.createElement(TextInput, {\n    style: styles.input,\n    keyboardType: \"email-address\",\n    placeholder: \"E-mail or phone number\",\n    onChangeText: textChangeHandler.bind(_this, \"email\")\n  }), !formState.inputValidities.email && formState.inputValues.email.length != 0 && formState.inputTuched.email && React.createElement(Text, {\n    style: styles.alertText\n  }, \"Please enter a valid E-mail!\"), React.createElement(TextInput, {\n    style: styles.input,\n    secureTextEntry: true,\n    textContentType: \"password\",\n    placeholder: \"Password\",\n    onChangeText: textChangeHandler.bind(_this, \"password\")\n  }), !formState.inputValidities.password && formState.inputValues.password.length != 0 && formState.inputTuched.password && React.createElement(Text, {\n    style: styles.alertText\n  }, \"Please enter a password longer than 6 characters\"), React.createElement(View, {\n    style: styles.buttonContainer\n  }, React.createElement(PersoButton, {\n    style: {\n      paddingVertical: 18\n    },\n    onPress: loginHandler\n  }, \"Sign in\"))), React.createElement(View, {\n    style: styles.media\n  }, React.createElement(Text, {\n    style: {\n      fontFamily: \"futura-meduim\",\n      fontSize: 19\n    }\n  }, \"Or sign in with\"), React.createElement(View, {\n    style: styles.mediaIcons\n  }, React.createElement(Entypo, {\n    name: \"facebook\",\n    size: 50,\n    color: \"#3b5998\"\n  }), React.createElement(AntDesign, {\n    name: \"instagram\",\n    size: 50,\n    color: \"#F56040\"\n  }), React.createElement(Entypo, {\n    name: \"twitter\",\n    size: 50,\n    color: \"#1DA1F2\"\n  })), React.createElement(View, {\n    style: {\n      marginTop: 20,\n      flexDirection: \"row\"\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 17,\n      fontFamily: \"futura-meduim\"\n    }\n  }, \"Don't have an account!\", \" \"), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      props.navigation.push(\"Signup\");\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 17,\n      fontFamily: \"futura-bold\",\n      color: Colors.primary2\n    }\n  }, \" \", \"Sign up\"))))));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"flex-start\"\n  },\n  imgContainer: {\n    marginTop: 50\n  },\n  buttonContainer: {\n    width: \"100%\",\n    marginTop: 20\n  },\n  media: {\n    marginTop: 40,\n    alignItems: \"center\",\n    width: Dimensions.get(\"window\").width * 0.6\n  },\n  mediaIcons: {\n    marginTop: 20,\n    width: \"100%\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\"\n  },\n  img: {\n    width: Dimensions.get(\"window\").width * 0.5,\n    height: Dimensions.get(\"window\").width * 0.5\n  },\n  inputs: {\n    width: Dimensions.get(\"window\").width * 0.8,\n    alignItems: \"flex-start\"\n  },\n  text: {\n    fontSize: 22,\n    fontFamily: \"futura-meduim\"\n  },\n  input: {\n    width: \"100%\",\n    borderWidth: 2,\n    borderRadius: 2,\n    borderColor: Colors.grey_fade,\n    paddingVertical: 15,\n    paddingHorizontal: 30,\n    marginTop: 20\n  },\n  alertText: {\n    color: Colors.danger,\n    fontFamily: \"futura-meduim\"\n  }\n});\nexport default Login;","map":{"version":3,"sources":["C:/Users/hp/Desktop/bpx_tech/GreanIt app/my-app/Screens/login.js"],"names":["React","useReducer","useContext","useState","PersoButton","Colors","Entypo","AntDesign","AuthContext","Axios","FORM_INPUT_UPDATE","formReducer","state","action","type","updatedValues","inputValues","input","value","updatedValidities","inputValidities","isValid","updatedTouches","isTouched","updatedFormIsValid","key","formIsValid","inputTuched","Login","props","isLoading","setIsLoading","SignIn","email","password","formState","dispatchFormState","emailRegex","textChangeHandler","inputIdentifier","text","test","toLowerCase","trim","length","loginHandler","fetch","method","headers","body","JSON","stringify","returnSecureToken","response","ok","Alert","alert","json","resData","idToken","style","flex","alignItems","justifyContent","Green_logo","styles","container","imgContainer","require","img","inputs","bind","alertText","buttonContainer","paddingVertical","media","fontFamily","fontSize","mediaIcons","marginTop","flexDirection","navigation","push","color","primary2","StyleSheet","create","width","Dimensions","get","height","borderWidth","borderRadius","borderColor","grey_fade","paddingHorizontal","danger"],"mappings":"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","sourcesContent":["import React, { useReducer, useContext, useState } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  Image,\r\n  Dimensions,\r\n  TextInput,\r\n  TouchableOpacity,\r\n  ScrollView,\r\n  Alert,\r\n  ActivityIndicator,\r\n} from \"react-native\";\r\nimport PersoButton from \"../Components/persoButton\";\r\nimport Colors from \"../Constants/Colors\";\r\nimport { Entypo } from \"@expo/vector-icons\";\r\nimport { AntDesign } from \"@expo/vector-icons\";\r\nimport { AuthContext } from \"../Components/context\";\r\nimport Axios from \"axios\";\r\n\r\nconst FORM_INPUT_UPDATE = \"FORM_INPUT_UPDATE\";\r\n\r\nconst formReducer = (state, action) => {\r\n  if (action.type === FORM_INPUT_UPDATE) {\r\n    const updatedValues = {\r\n      ...state.inputValues,\r\n      [action.input]: action.value,\r\n    };\r\n    const updatedValidities = {\r\n      ...state.inputValidities,\r\n      [action.input]: action.isValid,\r\n    };\r\n    const updatedTouches = {\r\n      ...state.inputValidities,\r\n      [action.input]: action.isTouched,\r\n    };\r\n    let updatedFormIsValid = true;\r\n    for (const key in updatedValidities) {\r\n      updatedFormIsValid = updatedFormIsValid && updatedValidities[key];\r\n    }\r\n    return {\r\n      formIsValid: updatedFormIsValid,\r\n      inputValidities: updatedValidities,\r\n      inputTuched: updatedTouches,\r\n      inputValues: updatedValues,\r\n    };\r\n  }\r\n  return state;\r\n};\r\n\r\nconst Login = (props) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const { SignIn } = useContext(AuthContext);\r\n  const [formState, dispatchFormState] = useReducer(formReducer, {\r\n    inputValues: {\r\n      email: \"\",\r\n      password: \"\",\r\n    },\r\n    inputValidities: {\r\n      email: false,\r\n      password: false,\r\n    },\r\n    inputTuched: {\r\n      email: false,\r\n      password: false,\r\n    },\r\n    formIsValid: false,\r\n  });\r\n  const emailRegex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n  const textChangeHandler = (inputIdentifier, text) => {\r\n    let isValid = false;\r\n    if (inputIdentifier == \"email\" && emailRegex.test(text.toLowerCase())) {\r\n      isValid = true;\r\n    } else if (\r\n      inputIdentifier == \"password\" &&\r\n      text.trim().length > 0 &&\r\n      text.length > 6\r\n    ) {\r\n      isValid = true;\r\n    }\r\n    dispatchFormState({\r\n      type: FORM_INPUT_UPDATE,\r\n      value: text,\r\n      isValid: isValid,\r\n      isTouched: true,\r\n      input: inputIdentifier,\r\n    });\r\n  };\r\n\r\n  const loginHandler = async () => {\r\n    if (formState.formIsValid) {\r\n      setIsLoading(true);\r\n\r\n      const response = await fetch(\r\n        \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyBHnNeM0JF6uNUBLSc3pSV4J80LL7kVQB8\",\r\n        {\r\n          method: \"POST\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify({\r\n            email: formState.inputValues.email,\r\n            password: formState.inputValues.password,\r\n            returnSecureToken: true,\r\n          }),\r\n        }\r\n      );\r\n      setIsLoading(false);\r\n      if (!response.ok) {\r\n        Alert.alert(\"prblm\", \"prblm de cnx\");\r\n      } else {\r\n        const resData = await response.json();\r\n       \r\n        SignIn(resData.idToken);\r\n      }\r\n    } else {\r\n      Alert.alert(\r\n        \"Invalid E-mail or password\",\r\n        \"Please inter a valid E-mail or Password\",\r\n        [{ text: \"ok\", style: \"cancel\" }]\r\n      );\r\n    }\r\n  };\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <View style={{ flex: 1, alignItems: \"center\", justifyContent: \"center\" }}>\r\n        <ActivityIndicator size=\"large\" color={Colors.Green_logo} />\r\n      </View>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <ScrollView>\r\n      <View style={styles.container}>\r\n        <View style={styles.imgContainer}>\r\n          <Image source={require(\"../assets/logo.png\")} style={styles.img} />\r\n        </View>\r\n        <View style={styles.inputs}>\r\n          <Text style={styles.text}>Login to your account.</Text>\r\n          <TextInput\r\n            style={styles.input}\r\n            keyboardType=\"email-address\"\r\n            placeholder=\"E-mail or phone number\"\r\n            onChangeText={textChangeHandler.bind(this, \"email\")}\r\n          />\r\n          {!formState.inputValidities.email &&\r\n            formState.inputValues.email.length != 0 &&\r\n            formState.inputTuched.email && (\r\n              <Text style={styles.alertText}>Please enter a valid E-mail!</Text>\r\n            )}\r\n          <TextInput\r\n            style={styles.input}\r\n            secureTextEntry\r\n            textContentType=\"password\"\r\n            placeholder=\"Password\"\r\n            onChangeText={textChangeHandler.bind(this, \"password\")}\r\n          />\r\n          {!formState.inputValidities.password &&\r\n            formState.inputValues.password.length != 0 &&\r\n            formState.inputTuched.password && (\r\n              <Text style={styles.alertText}>\r\n                Please enter a password longer than 6 characters\r\n              </Text>\r\n            )}\r\n          <View style={styles.buttonContainer}>\r\n            <PersoButton style={{ paddingVertical: 18 }} onPress={loginHandler}>\r\n              Sign in\r\n            </PersoButton>\r\n          </View>\r\n        </View>\r\n        <View style={styles.media}>\r\n          <Text style={{ fontFamily: \"futura-meduim\", fontSize: 19 }}>\r\n            Or sign in with\r\n          </Text>\r\n          <View style={styles.mediaIcons}>\r\n            <Entypo name=\"facebook\" size={50} color=\"#3b5998\" />\r\n            <AntDesign name=\"instagram\" size={50} color=\"#F56040\" />\r\n            <Entypo name=\"twitter\" size={50} color=\"#1DA1F2\" />\r\n          </View>\r\n          <View style={{ marginTop: 20, flexDirection: \"row\" }}>\r\n            <Text style={{ fontSize: 17, fontFamily: \"futura-meduim\" }}>\r\n              Don't have an account!{\" \"}\r\n            </Text>\r\n            <TouchableOpacity\r\n              onPress={() => {\r\n                props.navigation.push(\"Signup\");\r\n              }}\r\n            >\r\n              <Text\r\n                style={{\r\n                  fontSize: 17,\r\n                  fontFamily: \"futura-bold\",\r\n                  color: Colors.primary2,\r\n                }}\r\n              >\r\n                {\" \"}\r\n                Sign up\r\n              </Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </View>\r\n      </View>\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-start\",\r\n  },\r\n  imgContainer: {\r\n    marginTop: 50,\r\n  },\r\n  buttonContainer: {\r\n    width: \"100%\",\r\n    marginTop: 20,\r\n  },\r\n  media: {\r\n    marginTop: 40,\r\n    alignItems: \"center\",\r\n    width: Dimensions.get(\"window\").width * 0.6,\r\n  },\r\n  mediaIcons: {\r\n    marginTop: 20,\r\n    width: \"100%\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  img: {\r\n    width: Dimensions.get(\"window\").width * 0.5,\r\n    height: Dimensions.get(\"window\").width * 0.5,\r\n  },\r\n  inputs: {\r\n    width: Dimensions.get(\"window\").width * 0.8,\r\n    alignItems: \"flex-start\",\r\n  },\r\n  text: {\r\n    fontSize: 22,\r\n    fontFamily: \"futura-meduim\",\r\n  },\r\n  input: {\r\n    width: \"100%\",\r\n    borderWidth: 2,\r\n    borderRadius: 2,\r\n    borderColor: Colors.grey_fade,\r\n    paddingVertical: 15,\r\n    paddingHorizontal: 30,\r\n    marginTop: 20,\r\n  },\r\n  alertText: {\r\n    color: Colors.danger,\r\n    fontFamily: \"futura-meduim\",\r\n  },\r\n});\r\n\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}